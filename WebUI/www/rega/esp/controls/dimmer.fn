function ::CreateDimmingActuator()
{
   ! Necessary for checking if the expert mode is active
   object oUser = dom.GetObject( system.GetSessionVar('sessionUserID'));
   integer userID = oUser.ID();
   object user = dom.GetObject(userID);

  integer iLvlDpId = 0;
  integer iOldLvlDpId = 0;
  integer iState = 0;
  real rLevelReal = -1.0;
  string sLevelReal;

  ! The HmIP-MIOB has a different channel type than an ordinary dimmer (17 =ictHSS instead of 27 = ictHSSDimmingActuator)
  ! The same is true for all devices of the type VIR-LG-*
  if( (cObj.ChannelType() == ictHSSDimmingActuator)
      || (cObj.Label() == "HmIP-MIOB")
      || (cObj.Label().Substr(0,7) == "VIR-LG-")
    )
  {
    object oLevel = cObj.DPByControl("DIMMER.LEVEL");
    object oLevelReal = cObj.DPByControl("DIMMER.LEVEL_REAL");
    object oColor = cObj.DPByControl("DIMMER.COLOR");

    if( oLevel )
    {

      iLvlDpId = oLevel.ID();
      iState = oLevel.Value() * 100;
    }
    if ( oLevelReal ) {
      rLevelReal = oLevelReal.Value() * 100;
      sLevelReal = rLevelReal.ToString();
    }
    object oOldLevel = cObj.DPByControl("DIMMER.OLD_LEVEL");
    if( oOldLevel )
    {
      iOldLvlDpId = oOldLevel.ID();
    }
  }
  WriteLine("<td>");
    WriteLine("<table>");
      WriteLine("<tr>");
        !****************
        WriteLine("<td colspan='3' id='slidCtrl"#cObj.ID()#"' class='CLASS02529'></td>");
        WriteLine("<td class='CLASS02529'>");
          WriteLine("<div class='PercBtn' >");
            WriteLine("<table width='100%' height='100%'>");
              WriteLine("<tr class='CLASS02531'>");
                string sReadOnly = "";
                if( system.GetVar("iStatusOnly") == 1 )
                {
                  sReadOnly = "readonly";
                }
                WriteLine("<td colspan='2' class='CLASS02541'><input id='"#chnId#"Perc' type='text' value='"#iState#"' size='3' class='CLASS02542' "#sReadOnly#" /><b>%</b></td>");
              WriteLine("</tr>");
              WriteLine("<tr>");
                WriteLine("<td style='text-align: center' class='CLASS02544'>");
                WriteLine("<table cellspacing='0' cellpadding='0'><tr><td><img id='"#chnId#"Up' height='12px' width='40px' src='/ise/img/up.png' class='CLASS02543'/></td></tr><tr><td><img id='"#chnId#"Down' height='12px' width='40px' src='/ise/img/down.png' class='CLASS02543' /></td></tr></table>");
                WriteLine("</td><td style='text-align: center' class='CLASS02544'><img src='/ise/img/enter.png' width='40px' height='25px' class='CLASS02543' /></td>");
              WriteLine("</tr>");
            WriteLine("</table>");
          WriteLine("</div>");
        WriteLine("</td>");

        WriteLine("<td class='CLASS02529'>");
          WriteLine("<table width='100%' height='100%' cellspacing='10'>");
            WriteLine("<tr><td><div id='"#chnId#"On'  class='ControlBtnOn CLASS02545 j_translate'>${actionStatusControlLblOn}</div></td></tr>");
            WriteLine("<tr><td><div id='"#chnId#"Off' class='ControlBtnOff CLASS02545 j_translate'>${actionStatusControlLblOff}</div></td></tr>");
          WriteLine("</table>");
        WriteLine("</td>");

        if (oColor) {
          ! string listColor = "black\tblue\tgreen\tturquoise\tred\tpurple\tyellow\twhite";
          string listColor = "${lblOff}\t${optionColorBLUE}\t${optionColorGREEN}\t${optionColorTURQUOISE}\t${optionColorRED}\t${optionColorPURPLE}\t${optionColorYELLOW}\t${optionColorWHITE}";
          string sColor;
          WriteLine("<td style='_background-color:#89989b'>");
            WriteLine("<div class='ControlBtnOff'>");
              WriteLine("<table>");
                WriteLine("<tr><td><div>${stringTableColor}</div></td></tr>");
                ! Color selectbox
                WriteLine("<tr><td>");
                  WriteLine("<select id='bslColorSelector"#chnId#"' onchange='bslSetColor(this,"#oColor.ID()#");'>");
                    integer loop = 0;
                    foreach(sColor, listColor) {
                      WriteLine("<option value="#loop#">"#sColor#"</option>");
                      loop = loop + 1;
                    }
                  WriteLine("</select>");
                WriteLine("</td></tr>");
              WriteLine("</table>");
            WriteLine("</div>");

          WriteLine("</td>");
          WriteLine("<script type='text/javascript'>");
            WriteLine("bslSetColor = function(elm, oColorID) {");
              WriteLine("setDpState(oColorID, elm.value);");
            WriteLine("}");
            WriteLine("jQuery('#bslColorSelector"#chnId#"').val("#oColor.Value()#");");
          WriteLine("</script>");
        }

      !****************
      WriteLine("</tr>");
      if ( (rLevelReal != -1.0) && (user.UserEasyLinkMode() != true) ) {
        WriteLine("<tr>");
          WriteLine("<td><div class='ControlBtnInfo j_translate' style='color:white'>${lblInfoLevelReal}: "#sLevelReal.StrValueByIndex(".",0)#"%</div></td>")
        WriteLine("</tr>");
      }


    WriteLine("</table>");
  WriteLine("</td>");

  string sCtrlId = "slidCtrl"#chnId;
  WriteLine("<script type='text/javascript'>");
    WriteLine("ibd"#chnId#" = new iseButtonsDimmer("#chnId#", "#iState#", "#iLvlDpId#", "#iOldLvlDpId#", "#system.GetVar("iStatusOnly")#", "#system.GetVar('bSliderFlag')#", '"#cObj.Label()#"' );");

    Write("jQuery('#"#chnId#"Off').html(translateKey('actionStatusControlLblOff')).show();");
    Write("jQuery('#"#chnId#"On').html(translateKey('actionStatusControlLblOn')).show();");
  WriteLine("</script>");

  return;
}

function ::CreateDimmerRealInfoControl() {
  real rLevelReal = -1.0;
  string sLevelReal;
  string sColorReal;

  object oLevelReal = cObj.DPByControl("DIMMER_REAL.LEVEL");
  object oColorReal = cObj.DPByControl("DIMMER_REAL.COLOR");

  if ( oLevelReal ) {
    rLevelReal = oLevelReal.Value() * 100;
    sLevelReal = rLevelReal.ToString();
  }

  string lblValue = "${lblInfoLevelRealBrightness}";

  if ((cObj.Label() == "HmIP-WUA") || (cObj.Label() == "ELV-SH-WUA")) {
    lblValue = "${lblInfoLevelReal}";
  }


  WriteLine("<td>");
    WriteLine("<table class='ControlBtnInfo'>");
      WriteLine("<tr style='height:40px;'>");
        WriteLine("<td id='"#chnId#"Level'>");
          WriteLine(""#lblValue#": "#sLevelReal.StrValueByIndex(".",0)#"%");
        WriteLine("</td>");
      WriteLine("</tr>");
    WriteLine("</table>");
  WriteLine("</td>");

  if ( oColorReal ) {
    string arColor = "lblOff,optionColorBLUE,optionColorGREEN,optionColorTURQUOISE,optionColorRED,optionColorPURPLE,optionColorYELLOW,optionColorWHITE";
    integer colorReal = oColorReal.Value();
    WriteLine("<td>");
      WriteLine("<table class='ControlBtnInfo'>");
        WriteLine("<tr style='height:40px;'>");
          WriteLine("<td id='"#chnId#"Color'>");
            WriteLine("${lblInfoColorReal}: ${"#arColor.StrValueByIndex(",",colorReal)#"}");
          WriteLine("</td>");
        WriteLine("</tr>");
      WriteLine("</table>");
    WriteLine("</td>");
  }
}

function ::CreateDALIDimmingActuator()
{
   ! Necessary for checking if the expert mode is active
   object oUser = dom.GetObject( system.GetSessionVar('sessionUserID'));
   integer userID = oUser.ID();
   object user = dom.GetObject(userID);

  integer iLvlDpId = 0;
  integer iOldLvlDpId = 0;
  integer iState = 0;

  object oLevel = cObj.DPByControl("UNIVERSAL_LIGHT_RECEIVER.LEVEL");
  if( oLevel )
  {
    iLvlDpId = oLevel.ID();
    if (oLevel.Value() != '') {
      iState = oLevel.Value() * 100;
    }
  }

  WriteLine("<td>");
    WriteLine("<table>");
      WriteLine("<tr>");
        !****************
        WriteLine("<td colspan='3' id='slidCtrl"#cObj.ID()#"' class='CLASS02529'></td>");
        WriteLine("<td class='CLASS02529'>");
          WriteLine("<div class='PercBtn' >");
            WriteLine("<table width='100%' height='100%'>");
              WriteLine("<tr class='CLASS02531'>");
                string sReadOnly = "";
                if( system.GetVar("iStatusOnly") == 1 )
                {
                  sReadOnly = "readonly";
                }
                WriteLine("<td colspan='2' class='CLASS02541'><input id='"#chnId#"Perc' type='text' value='"#iState#"' size='3' class='CLASS02542' "#sReadOnly#" /><b>%</b></td>");
              WriteLine("</tr>");
              WriteLine("<tr>");
                WriteLine("<td style='text-align: center' class='CLASS02544'>");
                WriteLine("<table cellspacing='0' cellpadding='0'><tr><td><img id='"#chnId#"Up' height='12px' width='40px' src='/ise/img/up.png' class='CLASS02543'/></td></tr><tr><td><img id='"#chnId#"Down' height='12px' width='40px' src='/ise/img/down.png' class='CLASS02543' /></td></tr></table>");
                WriteLine("</td><td style='text-align: center' class='CLASS02544'><img src='/ise/img/enter.png' width='40px' height='25px' class='CLASS02543' /></td>");
              WriteLine("</tr>");
            WriteLine("</table>");
          WriteLine("</div>");
        WriteLine("</td>");

        WriteLine("<td class='CLASS02529'>");
          WriteLine("<table width='100%' height='100%' cellspacing='10'>");
            WriteLine("<tr><td><div id='"#chnId#"On'  class='ControlBtnOn CLASS02545 j_translate'>${actionStatusControlLblOn}</div></td></tr>");
            WriteLine("<tr><td><div id='"#chnId#"Off' class='ControlBtnOff CLASS02545 j_translate'>${actionStatusControlLblOff}</div></td></tr>");
          WriteLine("</table>");
        WriteLine("</td>");


      !****************
      WriteLine("</tr>");


    WriteLine("</table>");
  WriteLine("</td>");

  string sCtrlId = "slidCtrl"#chnId;
  WriteLine("<script type='text/javascript'>");
    WriteLine("ibd"#chnId#" = new iseButtonsDimmer("#chnId#", "#iState#", "#iLvlDpId#", "#iOldLvlDpId#", "#system.GetVar("iStatusOnly")#", "#system.GetVar('bSliderFlag')#", '"#cObj.Label()#"' );");

    Write("jQuery('#"#chnId#"Off').html(translateKey('actionStatusControlLblOff')).show();");
    Write("jQuery('#"#chnId#"On').html(translateKey('actionStatusControlLblOn')).show();");
  WriteLine("</script>");

  return;
}

! This has been introduced with the HmIP-BSL Fw. 2.0.0
! The channel type of the virtual dimmer channels is DIMMER, but they are acting as an OPTICAL_SIGNAL_RECEIVER
function ::CreateOpticalSignalReceiver()
{
   ! Necessary for checking if the expert mode is active
   object oUser = dom.GetObject( system.GetSessionVar('sessionUserID'));
   integer userID = oUser.ID();
   object user = dom.GetObject(userID);

   string ch = cObj.Address().StrValueByIndex(":",1);

  integer iLvlDpId = 0;
  integer iOldLvlDpId = 0;
  integer iState = 0;

  object oLevel = cObj.DPByControl("DIMMER.LEVEL");
  object oColor = cObj.DPByControl("DIMMER.COLOR");
  object oBehaviour = cObj.DPByControl("DIMMER.COLOR_BEHAVIOUR");

  if( oLevel )
  {
    iLvlDpId = oLevel.ID();
    iState = oLevel.Value() * 100;
  }

  object oOldLevel = cObj.DPByControl("DIMMER.OLD_LEVEL");
  if( oOldLevel )
  {
    iOldLvlDpId = oOldLevel.ID();
  }

  WriteLine("<td>");
    WriteLine("<table>");
      WriteLine("<tr>");
        !****************
        WriteLine("<td colspan='1' id='slidCtrl"#cObj.ID()#"' class='CLASS02529'></td>");
        WriteLine("<td class='CLASS02529'>");
          WriteLine("<div class='PercBtn' >");
            WriteLine("<table width='100%' height='100%'>");
              WriteLine("<tr class='CLASS02531'>");
                string sReadOnly = "";
                if( system.GetVar("iStatusOnly") == 1 )
                {
                  sReadOnly = "readonly";
                }
                WriteLine("<td colspan='2' class='CLASS02541'><input id='"#chnId#"Perc' type='text' value='"#iState#"' size='3' class='CLASS02542' "#sReadOnly#" /><b>%</b></td>");
              WriteLine("</tr>");
              WriteLine("<tr>");
                WriteLine("<td style='text-align: center' class='CLASS02544'>");
                WriteLine("<table cellspacing='0' cellpadding='0'><tr><td><img id='"#chnId#"Up' height='12px' width='40px' src='/ise/img/up.png' class='CLASS02543'/></td></tr><tr><td><img id='"#chnId#"Down' height='12px' width='40px' src='/ise/img/down.png' class='CLASS02543' /></td></tr></table>");
                WriteLine("</td><td style='text-align: center' class='CLASS02544'><img src='/ise/img/enter.png' width='40px' height='25px' class='CLASS02543' /></td>");
              WriteLine("</tr>");
            WriteLine("</table>");
          WriteLine("</div>");
        WriteLine("</td>");

        WriteLine("<td class='CLASS02529'>");
          WriteLine("<table width='100%' height='100%' cellspacing='10'>");
            WriteLine("<tr><td><div id='"#chnId#"On'  class='ControlBtnOn CLASS02545 j_translate'>${actionStatusControlLblOn}</div></td></tr>");
            WriteLine("<tr><td><div id='"#chnId#"Off' class='ControlBtnOff CLASS02545 j_translate'>${actionStatusControlLblOff}</div></td></tr>");
          WriteLine("</table>");
        WriteLine("</td>");

      WriteLine("</tr>");
      WriteLine("<tr>");
        if (oColor) {
          ! string listColor = "black\tblue\tgreen\tturquoise\tred\tpurple\tyellow\twhite";
          string listColor = "${lblOff}\t${optionColorBLUE}\t${optionColorGREEN}\t${optionColorTURQUOISE}\t${optionColorRED}\t${optionColorPURPLE}\t${optionColorYELLOW}\t${optionColorWHITE}";
          string sColor;
          WriteLine("<td style='_background-color:#89989b'>");
            WriteLine("<div class='ControlBtnOff'>");
              WriteLine("<table style='margin:0 auto;'>");
                WriteLine("<tr><td><div>${stringTableColor}</div></td></tr>");
                ! Color selectbox
                WriteLine("<tr>");
                  WriteLine("<td>");
                    WriteLine("<select id='bslColorSelector"#chnId#"' onchange='setDpState("#oColor.ID()#", this.value);' style='text-align:center;'>");
                      integer loop = 0;
                      foreach(sColor, listColor) {
                        WriteLine("<option value="#loop#">"#sColor#"</option>");
                        loop = loop + 1;
                      }
                    WriteLine("</select>");
                  WriteLine("</td>");
                WriteLine("</tr>");
              WriteLine("</table>");
            WriteLine("</div>");
          WriteLine("</td>");

        !  if (oBehaviour) {
        !    WriteLine("<td><img src='/ise/img/help.png' style='cursor: pointer; width:28px; height:28px;' onclick='showParamHelp(translateKey(\"helpColorBehaviour\"), 450, 60);'></td>");
        !  }

          WriteLine("<script type='text/javascript'>");
            WriteLine("jQuery('#bslColorSelector"#chnId#"').val("#oColor.Value()#");");
          WriteLine("</script>");
        }

        if (oBehaviour) {
          string listBehaviour = "${optionColorOFF}\t${optionColorON}\t${optionBlinkSlow}\t${optionBlinkMiddle}\t${optionBlinkFast}\t${optionBlinkFlashSlow}\t${optionBlinkFlashMiddle}\t${optionBlinkFlashFast}\t${optionBlinkBillowSlow}\t${optionBlinkBillowMiddle}\t${optionBlinkBillowFast}";
          string sBehaviour;
          WriteLine("<td colspan='2' style='_background-color:#89989b'>");
            WriteLine("<div class='ControlBtnOff'>");
              WriteLine("<table style='margin:0 auto;'>");
                WriteLine("<tr><td><div>${lblMode}</div></td></tr>");
                ! Behaviour selectbox
                WriteLine("<tr><td>");
                  WriteLine("<select id='behaviourSelector"#chnId#"' onchange='setDpState("#oBehaviour.ID()#", this.value);' style='text-align:center;'>");
                    integer loop = 0;
                    foreach(sBehaviour, listBehaviour) {
                      WriteLine("<option value="#loop#">"#sBehaviour#"</option>");
                      loop = loop + 1;
                    }
                  WriteLine("</select>");
                WriteLine("</td></tr>");
              WriteLine("</table>");
            WriteLine("</div>");

          WriteLine("</td>");
          if (user.UserEasyLinkMode() != true) {
            WriteLine("<td><img src='/ise/img/help.png' style='cursor: pointer; width:28px; height:28px;' onclick='showParamHelp(translateKey(\"helpColorBehaviour_"+ch+"\"), 375, 60);'></td>");
          }
          WriteLine("<script type='text/javascript'>");
            WriteLine("jQuery('#behaviourSelector"#chnId#"').val("#oBehaviour.Value()#");");
          WriteLine("</script>");
        }

      WriteLine("<tr>");
    WriteLine("</table>");
  WriteLine("</td>");

  string sCtrlId = "slidCtrl"#chnId;
  WriteLine("<script type='text/javascript'>");
    WriteLine("ibd"#chnId#" = new iseButtonsDimmer("#chnId#", "#iState#", "#iLvlDpId#", "#iOldLvlDpId#", "#system.GetVar("iStatusOnly")#", "#system.GetVar('bSliderFlag')#", '"#cObj.Label()#"' );");
  WriteLine("</script>");

  return;
}
